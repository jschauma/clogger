CLOGGER(1)		NetBSD General Commands Manual		    CLOGGER(1)

NAME
     clogger -- log input to a chatroom

SYNOPSIS
     clogger [-DVfhv] [-c file] [-t type] -r room [message ...]

DESCRIPTION
     clogger writes input to the specified chat room(s).

OPTIONS
     clogger supports the following options:

     -D	       Run in debug mode.  No messages will actually be sent to the
	       chat service.

     -V	       Print version information and exit.

     -c file   Read configuration from this file.

     -f	       Continously read from stdin and post each line.

     -h	       Print a short usage statement and exit.

     -r room   Write the given message to this room.  Can be specified multi-
	       ple times.

     -t type   Clog the chat system of the given type.	Can be one of 'camp-
	       fire' or 'hipchat'.

     -v	       Be verbose.  Can be specified multiple times.

     message   The message to send to the given room(s); if not specified,
	       read input from stdin.

DETAILS
     clogger writes the given message to the specified chat room(s).  (Cur-
     rently supported chat services are Campfire and HipChat.)	It prefixes
     any messages with the username of the invoking user as well as the
     (short) hostname on which it is running.  If clogger was invoked via
     sudo(8), then it also prefixes the string with the username derived from
     the SUDO_UID environment variable.

     If the input consists of multiple lines, then clogger delivers the input
     as a pasted message.

     If the -f flag was specified, then clogger will continously read one line
     at a time from stdin and post it to the given room(s).  This is conceptu-
     ally similar to the use of the same flag for the tail(1) command.	Using
     this option may cause clogger to run into API limitations if there is a
     lot of (possibly continous) input.

CONFIGURATION
     By default, clogger reads its configuration from the file
     /etc/clogger.conf.	 In this file, you can specify the following key-
     word=value pairs:

     campfire_token  The API access token used to authenticate to Campfire, if
		     any.

     campfire_host   The hostname for Campfire API access, if any.

     chat_type	     The type of chat service to use.  Can be one of 'camp-
		     fire' or 'hipchat'.

     hipchat_host    The hostname for HipChat API access, if any.

     hipchat_token   The API access token used to authenticate to HipChat, if
		     any.

     proxy_url	     The URL of the HTTP proxy to use, if any.

     proxy_user	     The username to authenticate to the HTTP proxy, if any.

     proxy_pass	     The password to authenticate to the HTTP proxy, if any.

OS X CREDENTIALS
     When running on OS X, clogger will, if no access tokens were found in the
     configuration file, look in the keychain for an entry matching either
     clogger or its name suffixed with the chat type (e.g. 'clogger-hipchat').
     If none are found, clogger will prompt the user for the API token and
     subsequently store it in the keychain.

     This allows the user to store multiple credentials for different service
     without the need for an insecure text file.

EXAMPLES
     To say "Good news, everybody!" to room 1234:

	   echo "Good news, everybody!" | clogger -r 1234

     To paste the contents of the file 'config.xml' to the rooms 1234 and
     56789:

	   clogger -r 1234 -r 56789 <config.xml

     To periodically update the room 1234 with the latest ssh failures:

	   sudo tail -f /var/log/auth.log |		      \
		   egrep "(Invalid user|Failed publickey)" |  \
		   clogger -f -r 1234

     To clog the HipChat room "Cool Kids":

	   banner "Whazzzzup?" | clogger -t hipchat -r "Cool Kids"

EXIT STATUS
     The clogger utility exits 0 on success, and >0 if an error occurs.

BUGS
     Due to the way command-line options are processed, you cannot specify a
     message that begins with a '-' as the last argument.  Instead, you need
     to have clogger read it from stdin.  (This is the preferred invocation
     anyway, since that way you do not need to worry about the shell inter-
     preting any characters in a special way, which may have unexpected
     results.)

SEE ALSO
     logger(1), https://github.com/37signals/campfire-api
     https://www.hipchat.com/docs/api

HISTORY
     clogger was originally written by Jan Schaumann <jschauma@twitter.com> in
     November 2013.

NetBSD 5.0		      September 23, 2014		    NetBSD 5.0
